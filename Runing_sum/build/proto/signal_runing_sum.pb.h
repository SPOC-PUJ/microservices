// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/signal_runing_sum.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fsignal_5fruning_5fsum_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fsignal_5fruning_5fsum_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fsignal_5fruning_5fsum_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fsignal_5fruning_5fsum_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fsignal_5fruning_5fsum_2eproto;
namespace signal {
class Complex;
struct ComplexDefaultTypeInternal;
extern ComplexDefaultTypeInternal _Complex_default_instance_;
class RuningSumRequest;
struct RuningSumRequestDefaultTypeInternal;
extern RuningSumRequestDefaultTypeInternal _RuningSumRequest_default_instance_;
class RuningSumResponse;
struct RuningSumResponseDefaultTypeInternal;
extern RuningSumResponseDefaultTypeInternal _RuningSumResponse_default_instance_;
}  // namespace signal
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace signal {

// ===================================================================


// -------------------------------------------------------------------

class Complex final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:signal.Complex) */ {
 public:
  inline Complex() : Complex(nullptr) {}
  ~Complex() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Complex(
      ::google::protobuf::internal::ConstantInitialized);

  inline Complex(const Complex& from) : Complex(nullptr, from) {}
  inline Complex(Complex&& from) noexcept
      : Complex(nullptr, std::move(from)) {}
  inline Complex& operator=(const Complex& from) {
    CopyFrom(from);
    return *this;
  }
  inline Complex& operator=(Complex&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Complex& default_instance() {
    return *internal_default_instance();
  }
  static inline const Complex* internal_default_instance() {
    return reinterpret_cast<const Complex*>(
        &_Complex_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Complex& a, Complex& b) { a.Swap(&b); }
  inline void Swap(Complex* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Complex* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Complex* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Complex>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Complex& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Complex& from) { Complex::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Complex* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "signal.Complex"; }

 protected:
  explicit Complex(::google::protobuf::Arena* arena);
  Complex(::google::protobuf::Arena* arena, const Complex& from);
  Complex(::google::protobuf::Arena* arena, Complex&& from) noexcept
      : Complex(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRealFieldNumber = 1,
    kImagFieldNumber = 2,
  };
  // double real = 1;
  void clear_real() ;
  double real() const;
  void set_real(double value);

  private:
  double _internal_real() const;
  void _internal_set_real(double value);

  public:
  // double imag = 2;
  void clear_imag() ;
  double imag() const;
  void set_imag(double value);

  private:
  double _internal_imag() const;
  void _internal_set_imag(double value);

  public:
  // @@protoc_insertion_point(class_scope:signal.Complex)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    double real_;
    double imag_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fsignal_5fruning_5fsum_2eproto;
};
// -------------------------------------------------------------------

class RuningSumResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:signal.RuningSumResponse) */ {
 public:
  inline RuningSumResponse() : RuningSumResponse(nullptr) {}
  ~RuningSumResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RuningSumResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RuningSumResponse(const RuningSumResponse& from) : RuningSumResponse(nullptr, from) {}
  inline RuningSumResponse(RuningSumResponse&& from) noexcept
      : RuningSumResponse(nullptr, std::move(from)) {}
  inline RuningSumResponse& operator=(const RuningSumResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RuningSumResponse& operator=(RuningSumResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RuningSumResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RuningSumResponse* internal_default_instance() {
    return reinterpret_cast<const RuningSumResponse*>(
        &_RuningSumResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(RuningSumResponse& a, RuningSumResponse& b) { a.Swap(&b); }
  inline void Swap(RuningSumResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RuningSumResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RuningSumResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RuningSumResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RuningSumResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RuningSumResponse& from) { RuningSumResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RuningSumResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "signal.RuningSumResponse"; }

 protected:
  explicit RuningSumResponse(::google::protobuf::Arena* arena);
  RuningSumResponse(::google::protobuf::Arena* arena, const RuningSumResponse& from);
  RuningSumResponse(::google::protobuf::Arena* arena, RuningSumResponse&& from) noexcept
      : RuningSumResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // repeated .signal.Complex result = 1;
  int result_size() const;
  private:
  int _internal_result_size() const;

  public:
  void clear_result() ;
  ::signal::Complex* mutable_result(int index);
  ::google::protobuf::RepeatedPtrField<::signal::Complex>* mutable_result();

  private:
  const ::google::protobuf::RepeatedPtrField<::signal::Complex>& _internal_result() const;
  ::google::protobuf::RepeatedPtrField<::signal::Complex>* _internal_mutable_result();
  public:
  const ::signal::Complex& result(int index) const;
  ::signal::Complex* add_result();
  const ::google::protobuf::RepeatedPtrField<::signal::Complex>& result() const;
  // @@protoc_insertion_point(class_scope:signal.RuningSumResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::signal::Complex > result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fsignal_5fruning_5fsum_2eproto;
};
// -------------------------------------------------------------------

class RuningSumRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:signal.RuningSumRequest) */ {
 public:
  inline RuningSumRequest() : RuningSumRequest(nullptr) {}
  ~RuningSumRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RuningSumRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RuningSumRequest(const RuningSumRequest& from) : RuningSumRequest(nullptr, from) {}
  inline RuningSumRequest(RuningSumRequest&& from) noexcept
      : RuningSumRequest(nullptr, std::move(from)) {}
  inline RuningSumRequest& operator=(const RuningSumRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RuningSumRequest& operator=(RuningSumRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RuningSumRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RuningSumRequest* internal_default_instance() {
    return reinterpret_cast<const RuningSumRequest*>(
        &_RuningSumRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(RuningSumRequest& a, RuningSumRequest& b) { a.Swap(&b); }
  inline void Swap(RuningSumRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RuningSumRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RuningSumRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RuningSumRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RuningSumRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RuningSumRequest& from) { RuningSumRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RuningSumRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "signal.RuningSumRequest"; }

 protected:
  explicit RuningSumRequest(::google::protobuf::Arena* arena);
  RuningSumRequest(::google::protobuf::Arena* arena, const RuningSumRequest& from);
  RuningSumRequest(::google::protobuf::Arena* arena, RuningSumRequest&& from) noexcept
      : RuningSumRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSignalFieldNumber = 1,
  };
  // repeated .signal.Complex signal = 1;
  int signal_size() const;
  private:
  int _internal_signal_size() const;

  public:
  void clear_signal() ;
  ::signal::Complex* mutable_signal(int index);
  ::google::protobuf::RepeatedPtrField<::signal::Complex>* mutable_signal();

  private:
  const ::google::protobuf::RepeatedPtrField<::signal::Complex>& _internal_signal() const;
  ::google::protobuf::RepeatedPtrField<::signal::Complex>* _internal_mutable_signal();
  public:
  const ::signal::Complex& signal(int index) const;
  ::signal::Complex* add_signal();
  const ::google::protobuf::RepeatedPtrField<::signal::Complex>& signal() const;
  // @@protoc_insertion_point(class_scope:signal.RuningSumRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::signal::Complex > signal_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fsignal_5fruning_5fsum_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Complex

// double real = 1;
inline void Complex::clear_real() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.real_ = 0;
}
inline double Complex::real() const {
  // @@protoc_insertion_point(field_get:signal.Complex.real)
  return _internal_real();
}
inline void Complex::set_real(double value) {
  _internal_set_real(value);
  // @@protoc_insertion_point(field_set:signal.Complex.real)
}
inline double Complex::_internal_real() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.real_;
}
inline void Complex::_internal_set_real(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.real_ = value;
}

// double imag = 2;
inline void Complex::clear_imag() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.imag_ = 0;
}
inline double Complex::imag() const {
  // @@protoc_insertion_point(field_get:signal.Complex.imag)
  return _internal_imag();
}
inline void Complex::set_imag(double value) {
  _internal_set_imag(value);
  // @@protoc_insertion_point(field_set:signal.Complex.imag)
}
inline double Complex::_internal_imag() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.imag_;
}
inline void Complex::_internal_set_imag(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.imag_ = value;
}

// -------------------------------------------------------------------

// RuningSumRequest

// repeated .signal.Complex signal = 1;
inline int RuningSumRequest::_internal_signal_size() const {
  return _internal_signal().size();
}
inline int RuningSumRequest::signal_size() const {
  return _internal_signal_size();
}
inline void RuningSumRequest::clear_signal() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.signal_.Clear();
}
inline ::signal::Complex* RuningSumRequest::mutable_signal(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:signal.RuningSumRequest.signal)
  return _internal_mutable_signal()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::signal::Complex>* RuningSumRequest::mutable_signal()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:signal.RuningSumRequest.signal)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_signal();
}
inline const ::signal::Complex& RuningSumRequest::signal(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:signal.RuningSumRequest.signal)
  return _internal_signal().Get(index);
}
inline ::signal::Complex* RuningSumRequest::add_signal() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::signal::Complex* _add = _internal_mutable_signal()->Add();
  // @@protoc_insertion_point(field_add:signal.RuningSumRequest.signal)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::signal::Complex>& RuningSumRequest::signal() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:signal.RuningSumRequest.signal)
  return _internal_signal();
}
inline const ::google::protobuf::RepeatedPtrField<::signal::Complex>&
RuningSumRequest::_internal_signal() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.signal_;
}
inline ::google::protobuf::RepeatedPtrField<::signal::Complex>*
RuningSumRequest::_internal_mutable_signal() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.signal_;
}

// -------------------------------------------------------------------

// RuningSumResponse

// repeated .signal.Complex result = 1;
inline int RuningSumResponse::_internal_result_size() const {
  return _internal_result().size();
}
inline int RuningSumResponse::result_size() const {
  return _internal_result_size();
}
inline void RuningSumResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.Clear();
}
inline ::signal::Complex* RuningSumResponse::mutable_result(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:signal.RuningSumResponse.result)
  return _internal_mutable_result()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::signal::Complex>* RuningSumResponse::mutable_result()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:signal.RuningSumResponse.result)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_result();
}
inline const ::signal::Complex& RuningSumResponse::result(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:signal.RuningSumResponse.result)
  return _internal_result().Get(index);
}
inline ::signal::Complex* RuningSumResponse::add_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::signal::Complex* _add = _internal_mutable_result()->Add();
  // @@protoc_insertion_point(field_add:signal.RuningSumResponse.result)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::signal::Complex>& RuningSumResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:signal.RuningSumResponse.result)
  return _internal_result();
}
inline const ::google::protobuf::RepeatedPtrField<::signal::Complex>&
RuningSumResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_;
}
inline ::google::protobuf::RepeatedPtrField<::signal::Complex>*
RuningSumResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.result_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace signal


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_proto_2fsignal_5fruning_5fsum_2eproto_2epb_2eh
