// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/signal_runing_sum.proto
// Protobuf C++ Version: 5.26.1

#include "proto/signal_runing_sum.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace signal {

inline constexpr Complex::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : real_{0},
        imag_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Complex::Complex(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ComplexDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComplexDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComplexDefaultTypeInternal() {}
  union {
    Complex _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComplexDefaultTypeInternal _Complex_default_instance_;

inline constexpr RuningSumResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RuningSumResponse::RuningSumResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RuningSumResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RuningSumResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RuningSumResponseDefaultTypeInternal() {}
  union {
    RuningSumResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RuningSumResponseDefaultTypeInternal _RuningSumResponse_default_instance_;

inline constexpr RuningSumRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : signal_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RuningSumRequest::RuningSumRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RuningSumRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RuningSumRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RuningSumRequestDefaultTypeInternal() {}
  union {
    RuningSumRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RuningSumRequestDefaultTypeInternal _RuningSumRequest_default_instance_;
}  // namespace signal
static ::_pb::Metadata file_level_metadata_proto_2fsignal_5fruning_5fsum_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_proto_2fsignal_5fruning_5fsum_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proto_2fsignal_5fruning_5fsum_2eproto = nullptr;
const ::uint32_t
    TableStruct_proto_2fsignal_5fruning_5fsum_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signal::Complex, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signal::Complex, _impl_.real_),
        PROTOBUF_FIELD_OFFSET(::signal::Complex, _impl_.imag_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signal::RuningSumRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signal::RuningSumRequest, _impl_.signal_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signal::RuningSumResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signal::RuningSumResponse, _impl_.result_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::signal::Complex)},
        {10, -1, -1, sizeof(::signal::RuningSumRequest)},
        {19, -1, -1, sizeof(::signal::RuningSumResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::signal::_Complex_default_instance_._instance,
    &::signal::_RuningSumRequest_default_instance_._instance,
    &::signal::_RuningSumResponse_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fsignal_5fruning_5fsum_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\035proto/signal_runing_sum.proto\022\006signal\""
    "%\n\007Complex\022\014\n\004real\030\001 \001(\001\022\014\n\004imag\030\002 \001(\001\"3"
    "\n\020RuningSumRequest\022\037\n\006signal\030\001 \003(\0132\017.sig"
    "nal.Complex\"4\n\021RuningSumResponse\022\037\n\006resu"
    "lt\030\001 \003(\0132\017.signal.Complex2X\n\rSignalServi"
    "ce\022G\n\020ComputeRuningSum\022\030.signal.RuningSu"
    "mRequest\032\031.signal.RuningSumResponseb\006pro"
    "to3"
};
static ::absl::once_flag descriptor_table_proto_2fsignal_5fruning_5fsum_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_proto_2fsignal_5fruning_5fsum_2eproto = {
    false,
    false,
    283,
    descriptor_table_protodef_proto_2fsignal_5fruning_5fsum_2eproto,
    "proto/signal_runing_sum.proto",
    &descriptor_table_proto_2fsignal_5fruning_5fsum_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_proto_2fsignal_5fruning_5fsum_2eproto::offsets,
    file_level_metadata_proto_2fsignal_5fruning_5fsum_2eproto,
    file_level_enum_descriptors_proto_2fsignal_5fruning_5fsum_2eproto,
    file_level_service_descriptors_proto_2fsignal_5fruning_5fsum_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_proto_2fsignal_5fruning_5fsum_2eproto_getter() {
  return &descriptor_table_proto_2fsignal_5fruning_5fsum_2eproto;
}
namespace signal {
// ===================================================================

class Complex::_Internal {
 public:
};

Complex::Complex(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signal.Complex)
}
Complex::Complex(
    ::google::protobuf::Arena* arena, const Complex& from)
    : Complex(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Complex::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Complex::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, real_),
           0,
           offsetof(Impl_, imag_) -
               offsetof(Impl_, real_) +
               sizeof(Impl_::imag_));
}
Complex::~Complex() {
  // @@protoc_insertion_point(destructor:signal.Complex)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Complex::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Complex::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(Complex, _impl_._cached_size_),
              false,
          },
          &Complex::MergeImpl,
          &Complex::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Complex::Clear() {
// @@protoc_insertion_point(message_clear_start:signal.Complex)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.real_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.imag_) -
      reinterpret_cast<char*>(&_impl_.real_)) + sizeof(_impl_.imag_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Complex::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Complex::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Complex_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signal::Complex>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double imag = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Complex, _impl_.imag_)}},
    // double real = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(Complex, _impl_.real_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double real = 1;
    {PROTOBUF_FIELD_OFFSET(Complex, _impl_.real_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double imag = 2;
    {PROTOBUF_FIELD_OFFSET(Complex, _impl_.imag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Complex::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:signal.Complex)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double real = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_real = this->_internal_real();
  ::uint64_t raw_real;
  memcpy(&raw_real, &tmp_real, sizeof(tmp_real));
  if (raw_real != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_real(), target);
  }

  // double imag = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_imag = this->_internal_imag();
  ::uint64_t raw_imag;
  memcpy(&raw_imag, &tmp_imag, sizeof(tmp_imag));
  if (raw_imag != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_imag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:signal.Complex)
  return target;
}

::size_t Complex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:signal.Complex)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double real = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_real = this->_internal_real();
  ::uint64_t raw_real;
  memcpy(&raw_real, &tmp_real, sizeof(tmp_real));
  if (raw_real != 0) {
    total_size += 9;
  }

  // double imag = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_imag = this->_internal_imag();
  ::uint64_t raw_imag;
  memcpy(&raw_imag, &tmp_imag, sizeof(tmp_imag));
  if (raw_imag != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Complex::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Complex*>(&to_msg);
  auto& from = static_cast<const Complex&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signal.Complex)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_real = from._internal_real();
  ::uint64_t raw_real;
  memcpy(&raw_real, &tmp_real, sizeof(tmp_real));
  if (raw_real != 0) {
    _this->_impl_.real_ = from._impl_.real_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_imag = from._internal_imag();
  ::uint64_t raw_imag;
  memcpy(&raw_imag, &tmp_imag, sizeof(tmp_imag));
  if (raw_imag != 0) {
    _this->_impl_.imag_ = from._impl_.imag_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Complex::CopyFrom(const Complex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signal.Complex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Complex::IsInitialized() const {
  return true;
}

void Complex::InternalSwap(Complex* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Complex, _impl_.imag_)
      + sizeof(Complex::_impl_.imag_)
      - PROTOBUF_FIELD_OFFSET(Complex, _impl_.real_)>(
          reinterpret_cast<char*>(&_impl_.real_),
          reinterpret_cast<char*>(&other->_impl_.real_));
}

::google::protobuf::Metadata Complex::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fsignal_5fruning_5fsum_2eproto_getter,
                                   &descriptor_table_proto_2fsignal_5fruning_5fsum_2eproto_once,
                                   file_level_metadata_proto_2fsignal_5fruning_5fsum_2eproto[0]);
}
// ===================================================================

class RuningSumRequest::_Internal {
 public:
};

RuningSumRequest::RuningSumRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signal.RuningSumRequest)
}
inline PROTOBUF_NDEBUG_INLINE RuningSumRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : signal_{visibility, arena, from.signal_},
        _cached_size_{0} {}

RuningSumRequest::RuningSumRequest(
    ::google::protobuf::Arena* arena,
    const RuningSumRequest& from)
    : ::google::protobuf::Message(arena) {
  RuningSumRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:signal.RuningSumRequest)
}
inline PROTOBUF_NDEBUG_INLINE RuningSumRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : signal_{visibility, arena},
        _cached_size_{0} {}

inline void RuningSumRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RuningSumRequest::~RuningSumRequest() {
  // @@protoc_insertion_point(destructor:signal.RuningSumRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RuningSumRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RuningSumRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RuningSumRequest, _impl_._cached_size_),
              false,
          },
          &RuningSumRequest::MergeImpl,
          &RuningSumRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RuningSumRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:signal.RuningSumRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.signal_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RuningSumRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RuningSumRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RuningSumRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signal::RuningSumRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .signal.Complex signal = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RuningSumRequest, _impl_.signal_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .signal.Complex signal = 1;
    {PROTOBUF_FIELD_OFFSET(RuningSumRequest, _impl_.signal_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::signal::Complex>()},
  }}, {{
  }},
};

::uint8_t* RuningSumRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:signal.RuningSumRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .signal.Complex signal = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_signal_size());
       i < n; i++) {
    const auto& repfield = this->_internal_signal().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:signal.RuningSumRequest)
  return target;
}

::size_t RuningSumRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:signal.RuningSumRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .signal.Complex signal = 1;
  total_size += 1UL * this->_internal_signal_size();
  for (const auto& msg : this->_internal_signal()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RuningSumRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RuningSumRequest*>(&to_msg);
  auto& from = static_cast<const RuningSumRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signal.RuningSumRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_signal()->MergeFrom(
      from._internal_signal());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RuningSumRequest::CopyFrom(const RuningSumRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signal.RuningSumRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RuningSumRequest::IsInitialized() const {
  return true;
}

void RuningSumRequest::InternalSwap(RuningSumRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.signal_.InternalSwap(&other->_impl_.signal_);
}

::google::protobuf::Metadata RuningSumRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fsignal_5fruning_5fsum_2eproto_getter,
                                   &descriptor_table_proto_2fsignal_5fruning_5fsum_2eproto_once,
                                   file_level_metadata_proto_2fsignal_5fruning_5fsum_2eproto[1]);
}
// ===================================================================

class RuningSumResponse::_Internal {
 public:
};

RuningSumResponse::RuningSumResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signal.RuningSumResponse)
}
inline PROTOBUF_NDEBUG_INLINE RuningSumResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : result_{visibility, arena, from.result_},
        _cached_size_{0} {}

RuningSumResponse::RuningSumResponse(
    ::google::protobuf::Arena* arena,
    const RuningSumResponse& from)
    : ::google::protobuf::Message(arena) {
  RuningSumResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:signal.RuningSumResponse)
}
inline PROTOBUF_NDEBUG_INLINE RuningSumResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : result_{visibility, arena},
        _cached_size_{0} {}

inline void RuningSumResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RuningSumResponse::~RuningSumResponse() {
  // @@protoc_insertion_point(destructor:signal.RuningSumResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RuningSumResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
RuningSumResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(RuningSumResponse, _impl_._cached_size_),
              false,
          },
          &RuningSumResponse::MergeImpl,
          &RuningSumResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void RuningSumResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:signal.RuningSumResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RuningSumResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> RuningSumResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RuningSumResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signal::RuningSumResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .signal.Complex result = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RuningSumResponse, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .signal.Complex result = 1;
    {PROTOBUF_FIELD_OFFSET(RuningSumResponse, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::signal::Complex>()},
  }}, {{
  }},
};

::uint8_t* RuningSumResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:signal.RuningSumResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .signal.Complex result = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_result_size());
       i < n; i++) {
    const auto& repfield = this->_internal_result().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:signal.RuningSumResponse)
  return target;
}

::size_t RuningSumResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:signal.RuningSumResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .signal.Complex result = 1;
  total_size += 1UL * this->_internal_result_size();
  for (const auto& msg : this->_internal_result()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RuningSumResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RuningSumResponse*>(&to_msg);
  auto& from = static_cast<const RuningSumResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signal.RuningSumResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_result()->MergeFrom(
      from._internal_result());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RuningSumResponse::CopyFrom(const RuningSumResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signal.RuningSumResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RuningSumResponse::IsInitialized() const {
  return true;
}

void RuningSumResponse::InternalSwap(RuningSumResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.result_.InternalSwap(&other->_impl_.result_);
}

::google::protobuf::Metadata RuningSumResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_proto_2fsignal_5fruning_5fsum_2eproto_getter,
                                   &descriptor_table_proto_2fsignal_5fruning_5fsum_2eproto_once,
                                   file_level_metadata_proto_2fsignal_5fruning_5fsum_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace signal
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_proto_2fsignal_5fruning_5fsum_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
