// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/elproto.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2felproto_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_proto_2felproto_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2felproto_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2felproto_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2felproto_2eproto;
class MovingAverageRequest;
struct MovingAverageRequestDefaultTypeInternal;
extern MovingAverageRequestDefaultTypeInternal _MovingAverageRequest_default_instance_;
class MovingAverageResponse;
struct MovingAverageResponseDefaultTypeInternal;
extern MovingAverageResponseDefaultTypeInternal _MovingAverageResponse_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class MovingAverageResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MovingAverageResponse) */ {
 public:
  inline MovingAverageResponse() : MovingAverageResponse(nullptr) {}
  ~MovingAverageResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MovingAverageResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MovingAverageResponse(const MovingAverageResponse& from) : MovingAverageResponse(nullptr, from) {}
  inline MovingAverageResponse(MovingAverageResponse&& from) noexcept
      : MovingAverageResponse(nullptr, std::move(from)) {}
  inline MovingAverageResponse& operator=(const MovingAverageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MovingAverageResponse& operator=(MovingAverageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MovingAverageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MovingAverageResponse* internal_default_instance() {
    return reinterpret_cast<const MovingAverageResponse*>(
        &_MovingAverageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MovingAverageResponse& a, MovingAverageResponse& b) { a.Swap(&b); }
  inline void Swap(MovingAverageResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MovingAverageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MovingAverageResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<MovingAverageResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MovingAverageResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MovingAverageResponse& from) { MovingAverageResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MovingAverageResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MovingAverageResponse"; }

 protected:
  explicit MovingAverageResponse(::google::protobuf::Arena* arena);
  MovingAverageResponse(::google::protobuf::Arena* arena, const MovingAverageResponse& from);
  MovingAverageResponse(::google::protobuf::Arena* arena, MovingAverageResponse&& from) noexcept
      : MovingAverageResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutputFieldNumber = 1,
  };
  // repeated double output = 1;
  int output_size() const;
  private:
  int _internal_output_size() const;

  public:
  void clear_output() ;
  double output(int index) const;
  void set_output(int index, double value);
  void add_output(double value);
  const ::google::protobuf::RepeatedField<double>& output() const;
  ::google::protobuf::RepeatedField<double>* mutable_output();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_output() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_output();

  public:
  // @@protoc_insertion_point(class_scope:MovingAverageResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<double> output_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2felproto_2eproto;
};
// -------------------------------------------------------------------

class MovingAverageRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MovingAverageRequest) */ {
 public:
  inline MovingAverageRequest() : MovingAverageRequest(nullptr) {}
  ~MovingAverageRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MovingAverageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline MovingAverageRequest(const MovingAverageRequest& from) : MovingAverageRequest(nullptr, from) {}
  inline MovingAverageRequest(MovingAverageRequest&& from) noexcept
      : MovingAverageRequest(nullptr, std::move(from)) {}
  inline MovingAverageRequest& operator=(const MovingAverageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MovingAverageRequest& operator=(MovingAverageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MovingAverageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const MovingAverageRequest* internal_default_instance() {
    return reinterpret_cast<const MovingAverageRequest*>(
        &_MovingAverageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MovingAverageRequest& a, MovingAverageRequest& b) { a.Swap(&b); }
  inline void Swap(MovingAverageRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MovingAverageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MovingAverageRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<MovingAverageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MovingAverageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MovingAverageRequest& from) { MovingAverageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MovingAverageRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MovingAverageRequest"; }

 protected:
  explicit MovingAverageRequest(::google::protobuf::Arena* arena);
  MovingAverageRequest(::google::protobuf::Arena* arena, const MovingAverageRequest& from);
  MovingAverageRequest(::google::protobuf::Arena* arena, MovingAverageRequest&& from) noexcept
      : MovingAverageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInputFieldNumber = 1,
    kWindowSizeFieldNumber = 2,
  };
  // repeated double input = 1;
  int input_size() const;
  private:
  int _internal_input_size() const;

  public:
  void clear_input() ;
  double input(int index) const;
  void set_input(int index, double value);
  void add_input(double value);
  const ::google::protobuf::RepeatedField<double>& input() const;
  ::google::protobuf::RepeatedField<double>* mutable_input();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_input() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_input();

  public:
  // int32 window_size = 2;
  void clear_window_size() ;
  ::int32_t window_size() const;
  void set_window_size(::int32_t value);

  private:
  ::int32_t _internal_window_size() const;
  void _internal_set_window_size(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MovingAverageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<double> input_;
    ::int32_t window_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2felproto_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MovingAverageRequest

// repeated double input = 1;
inline int MovingAverageRequest::_internal_input_size() const {
  return _internal_input().size();
}
inline int MovingAverageRequest::input_size() const {
  return _internal_input_size();
}
inline void MovingAverageRequest::clear_input() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.input_.Clear();
}
inline double MovingAverageRequest::input(int index) const {
  // @@protoc_insertion_point(field_get:MovingAverageRequest.input)
  return _internal_input().Get(index);
}
inline void MovingAverageRequest::set_input(int index, double value) {
  _internal_mutable_input()->Set(index, value);
  // @@protoc_insertion_point(field_set:MovingAverageRequest.input)
}
inline void MovingAverageRequest::add_input(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_input()->Add(value);
  // @@protoc_insertion_point(field_add:MovingAverageRequest.input)
}
inline const ::google::protobuf::RepeatedField<double>& MovingAverageRequest::input() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MovingAverageRequest.input)
  return _internal_input();
}
inline ::google::protobuf::RepeatedField<double>* MovingAverageRequest::mutable_input()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MovingAverageRequest.input)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_input();
}
inline const ::google::protobuf::RepeatedField<double>&
MovingAverageRequest::_internal_input() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.input_;
}
inline ::google::protobuf::RepeatedField<double>* MovingAverageRequest::_internal_mutable_input() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.input_;
}

// int32 window_size = 2;
inline void MovingAverageRequest::clear_window_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.window_size_ = 0;
}
inline ::int32_t MovingAverageRequest::window_size() const {
  // @@protoc_insertion_point(field_get:MovingAverageRequest.window_size)
  return _internal_window_size();
}
inline void MovingAverageRequest::set_window_size(::int32_t value) {
  _internal_set_window_size(value);
  // @@protoc_insertion_point(field_set:MovingAverageRequest.window_size)
}
inline ::int32_t MovingAverageRequest::_internal_window_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.window_size_;
}
inline void MovingAverageRequest::_internal_set_window_size(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.window_size_ = value;
}

// -------------------------------------------------------------------

// MovingAverageResponse

// repeated double output = 1;
inline int MovingAverageResponse::_internal_output_size() const {
  return _internal_output().size();
}
inline int MovingAverageResponse::output_size() const {
  return _internal_output_size();
}
inline void MovingAverageResponse::clear_output() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.output_.Clear();
}
inline double MovingAverageResponse::output(int index) const {
  // @@protoc_insertion_point(field_get:MovingAverageResponse.output)
  return _internal_output().Get(index);
}
inline void MovingAverageResponse::set_output(int index, double value) {
  _internal_mutable_output()->Set(index, value);
  // @@protoc_insertion_point(field_set:MovingAverageResponse.output)
}
inline void MovingAverageResponse::add_output(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_output()->Add(value);
  // @@protoc_insertion_point(field_add:MovingAverageResponse.output)
}
inline const ::google::protobuf::RepeatedField<double>& MovingAverageResponse::output() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MovingAverageResponse.output)
  return _internal_output();
}
inline ::google::protobuf::RepeatedField<double>* MovingAverageResponse::mutable_output()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MovingAverageResponse.output)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_output();
}
inline const ::google::protobuf::RepeatedField<double>&
MovingAverageResponse::_internal_output() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.output_;
}
inline ::google::protobuf::RepeatedField<double>* MovingAverageResponse::_internal_mutable_output() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.output_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_proto_2felproto_2eproto_2epb_2eh
